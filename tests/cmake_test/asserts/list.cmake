include(cmake_test/cmake_test)

ct_add_test(NAME assert_list)
function(${assert_list})
    include(cmake_test/asserts/list)

    ct_add_section(NAME test_empty_string EXPECTFAIL)
    function(${test_empty_string})
        set(input "")
        ct_assert_list(input)
    endfunction()

    ct_add_section(NAME test_string EXPECTFAIL)
    function(${test_string})
        set(input "hi")
        ct_assert_list(input)
    endfunction()

    ct_add_section(NAME test_escaped_semicolon EXPECTFAIL)
    function(${test_escaped_semicolon})
        set(input "hi\;world")
        ct_assert_list(input)
    endfunction()

    ct_add_section(NAME test_hard_coded_list)
    function(${test_hard_coded_list})
        set(input "hi;world")
        ct_assert_list(input)
    endfunction()

    ct_add_section(NAME test_implicit_list)
    function(${test_implicit_list})
        set(input "hi" "world")
        ct_assert_list(input)
    endfunction()
endfunction()

ct_add_test(NAME assert_not_list)
function(${assert_not_list})
    include(cmake_test/asserts/list)

    ct_add_section(NAME test_empty_string)
    function(${test_empty_string})
        set(input "")
        ct_assert_not_list(input)
    endfunction()

    ct_add_section(NAME test_string)
    function(${test_string})
        set(input "hi")
        ct_assert_not_list(input)
    endfunction()

    ct_add_section(NAME test_escaped_semicolon)
    function(${test_escaped_semicolon})
        set(input "hi\;world")
        ct_assert_not_list(input)
    endfunction()

    ct_add_section(NAME test_hard_coded_list EXPECTFAIL)
    function(${test_hard_coded_list})
        set(input "hi;world")
        ct_assert_not_list(input)
    endfunction()

    ct_add_section(NAME test_implicit_list EXPECTFAIL)
    function(${test_implicit_list})
        set(input "hi" "world")
        ct_assert_not_list(input)
    endfunction()
endfunction()
