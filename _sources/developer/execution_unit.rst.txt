
####################
execution_unit.cmake
####################

.. module:: execution_unit.cmake


.. function:: cpp_class(CTExecutionUnit)


   .. warning:: This is a generic command invocation. It is not a function or macro definition.

   
   CTExecutionUnit represents the basic atomic unit of tests.
   Units can be either tests or test sections.
   The unit stores and tracks all state information
   related to the unit, such as the test ID, its friendly
   name, the file that contains it, etc.
   
   This class also contains useful instance methods
   for generating or modifying required information.
   
   An execution unit must be linked to an accompanying
   function that will be executed when this unit is tested.
   
   


.. function:: cpp_attr(CTExecutionUnit test_id)


   .. warning:: This is a generic command invocation. It is not a function or macro definition.

   Stores the unique ID of the unit.
   This value is autogenerated and
   is used to name the function
   this unit is linked to.
   


.. function:: cpp_attr(CTExecutionUnit friendly_name)


   .. warning:: This is a generic command invocation. It is not a function or macro definition.

   The "friendly name" of the execution unit.
   This is equivalent to the NAME parameter
   when calling ct_add_test() or ct_add_section().
   Dereferencing the value of this field
   will yield the ID of this unit while in the
   scope of the unit.
   


.. function:: cpp_attr(CTExecutionUnit test_file)


   .. warning:: This is a generic command invocation. It is not a function or macro definition.

   The full path that points to the file containing
   this unit's declaration. This value is propagated
   down from the root test to all sections and subsections.
   


.. function:: cpp_attr(CTExecutionUnit expect_fail)


   .. warning:: This is a generic command invocation. It is not a function or macro definition.

   A boolean describing whether this unit is intended
   to fail or not. Directly related to the parameter
   of the same name in ct_add_test() and ct_add_section().
   


.. function:: cpp_attr(CTExecutionUnit parent)


   .. warning:: This is a generic command invocation. It is not a function or macro definition.

   A reference pointing to the parent execution unit
   of this unit. This will be empty for the root test
   and filled for all subsections.
   


.. function:: cpp_attr(CTExecutionUnit children)


   .. warning:: This is a generic command invocation. It is not a function or macro definition.

   A map between IDs and references to unit instances
   used to represent the subsections of this unit.
   


.. function:: cpp_attr(CTExecutionUnit print_length "${CT_PRINT_LENGTH}")


   .. warning:: This is a generic command invocation. It is not a function or macro definition.

   The length to use for printing in the context of this
   unit and any subsections that do not override it.
   This value can be set by the parameter of the same name
   in ct_add_test() and ct_add_section(). It can also be set
   via an overriding cache variable.
   


.. function:: cpp_attr(CTExecutionUnit print_length_forced FALSE)


   .. warning:: This is a generic command invocation. It is not a function or macro definition.

   Describes whether the print length was forced via the call
   to ct_add_test() or ct_add_section() that constructed
   this unit.
   


.. function:: cpp_attr(CTExecutionUnit execute_sections FALSE)


   .. warning:: This is a generic command invocation. It is not a function or macro definition.

   A boolean describing whether or not this unit
   should loop over and execute all of its subsections.
   


.. function:: cpp_attr(CTExecutionUnit section_names_to_ids)


   .. warning:: This is a generic command invocation. It is not a function or macro definition.

   A map linking section friendly names to Ids so the
   id isn't lost between the first and second invocation passes.
   


.. function:: cpp_attr(CTExecutionUnit exceptions)


   .. warning:: This is a generic command invocation. It is not a function or macro definition.

   A list containing messages representing any exceptions
   that occurred during the execution of this unit.
   


.. function:: cpp_attr(CTExecutionUnit has_executed FALSE)


   .. warning:: This is a generic command invocation. It is not a function or macro definition.

   Whether this unit has been executed already or not.
   Useful for determining whether to re-execute
   after a failed test is detected.
   


.. function:: cpp_attr(CTExecutionUnit has_printed FALSE)


   .. warning:: This is a generic command invocation. It is not a function or macro definition.

   Whether the pass/fail status of this unit has been
   printed yet. This ensures that parent units of
   a failed unit are not printed multiple times.
   


.. function:: cpp_attr(CTExecutionUnit section_depth 0)


   .. warning:: This is a generic command invocation. It is not a function or macro definition.

   Stores how many sections deep this execution unit is.
   This is used to determine how many tabs to place in front
   of the pass/fail print line.
   


.. function:: cpp_member(append_child CTExecutionUnit str CTExecutionUnit)


   .. warning:: This is a generic command invocation. It is not a function or macro definition.

   Add a new subsection to this unit.
   The key must be the ID of the subsection
   and the value must be a dereferenced pointer
   pointing to the subsection.
   
   :param key: ID of the new subsection
   :param child: Reference to the new subsection.
   


.. function:: cpp_member(get_parent_list CTExecutionUnit desc)


   .. warning:: This is a generic command invocation. It is not a function or macro definition.

   Construct the list of all parents of this unit
   from the root down to the immediate parent of this unit.
   The returned list contains pointers to each of the
   parents, ordered with the root as the last element.
   
   :param ret: A return variable that will be set to the
               constructed list.
   


.. function:: cpp_member(execute CTExecutionUnit)


   .. warning:: This is a generic command invocation. It is not a function or macro definition.

   Executes the test or section that this unit represents.
   This function handles printing the pass/failure state
   as well as executing subsections. However, if this unit
   has already been executed, this function does nothing.
   
   


.. function:: cpp_member(exec_sections CTExecutionUnit)


   .. warning:: This is a generic command invocation. It is not a function or macro definition.

   Executes all subsections of this unit.
   If this unit has no subsections, this
   function does nothing.
   
   


.. function:: cpp_member(print_pass_or_fail CTExecutionUnit)


   .. warning:: This is a generic command invocation. It is not a function or macro definition.

   Determines whether the unit passed or failed
   and prints it, obeying the section depth,
   print length, and whether colors are enabled.
   
   

