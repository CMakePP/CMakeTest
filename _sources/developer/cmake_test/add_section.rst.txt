
######################
cmake_test/add_section
######################

.. module:: cmake_test/add_section


.. function:: ct_add_section(**kwargs)

   Adds a test section, should be called inside of a declared test function directly before declaring the section function.
   The NAME parameter will be populated as by set() with the generated section function name. Declare the section function using this generated name. Ex:
   
   .. code-block:: cmake
   
      #This is inside of a declared test function
      ct_add_section(NAME this_section)
      function(${this_section})
          message(STATUS "This code will run in a test section")
      endfunction()
   
   Upon being executed, this function will check if the section should be executed.
   If it is not, ct_add_section() will generate an ID for the section function and sets the variable pointed to by the NAME parameter to it.
   It will also construct a new CTExecutionUnit instance to represent the section.
   
   If the section is supposed to be executed, ct_add_section() will call the ``execute`` member function of the CTExecutionUnit representing this section.
   Exceptions will be tracked while the function is being executed. After completion of the test, the test status will be output
   to the screen. The section subsections will then be executed, following this same flow until there are no more subsections.
   
   If a section raises an exception when it is not expected to, it will be marked as a failing section and its subsections
   will not be executed, due to limitations in how CMake handles failures. However, sibling sections as well as 
   other tests will continue to execute, and the failures will be aggregated and printed after all tests have been ran.
   
   Print length of pass/fail lines can be adjusted with the `PRINT_LENGTH` option.
   
   Priority for print length is as follows (first most important):
    1. Current execution unit's PRINT_LENGTH option
    2. Parent's PRINT_LENGTH option
    3. Length set by ct_set_print_length()
    4. Built-in default of 80.
   
   **Keyword Arguments**
   
   :keyword NAME: Required argument specifying the name variable of the section. Will set a variable with specified name containing the generated function ID to use.
   :type NAME: pointer
   :keyword EXPECTFAIL: Option indicating whether the section is expected to fail or not, if specified will cause test failure when no exceptions were caught and success upon catching any exceptions.
   :type EXPECTFAIL: option
   :keyword PRINT_LENGTH: Optional argument specifying the desired print length of pass/fail output lines.
   :type PRINT_LENGTH: int
   
   .. seealso:: :func:`add_test.cmake.ct_add_test` for details on EXPECTFAIL.
   
   .. seealso:: :func:`exec_test.cmake.ct_exec_test` for details on halting tests on exceptions.
   
   

