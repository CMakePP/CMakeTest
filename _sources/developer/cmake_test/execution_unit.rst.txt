
#########################
cmake_test/execution_unit
#########################

.. module:: cmake_test/execution_unit


.. py:class:: CTExecutionUnit

   
   CTExecutionUnit represents the basic atomic unit of tests.
   Units can be either tests or test sections.
   The unit stores and tracks all state information
   related to the unit, such as the test ID, its friendly
   name, the file that contains it, etc.
   
   This class also contains useful instance methods
   for generating or modifying required information.
   
   An execution unit must be linked to an accompanying
   function that will be executed when this unit is tested.
   
   
   **Additional Constructors**

   .. py:method:: CTOR(id, test_id, expect_fail)

      

      :param id: 

      :type id: str

      :param test_id: 

      :type test_id: str

      :param expect_fail: 

      :type expect_fail: bool

   **Methods**

   .. py:method:: append_child(key, child)

      Add a new subsection to this unit.
      The key must be the ID of the subsection
      and the value must be a dereferenced pointer
      pointing to the subsection.
      
      :param key: ID of the new subsection
      :param child: Reference to the new subsection.
      

      :type key: str

      :type child: CTExecutionUnit


   .. py:method:: get_parent_list(ret)

      Construct the list of all parents of this unit
      from the root down to the immediate parent of this unit.
      The returned list contains pointers to each of the
      parents, ordered with the root as the last element.
      
      :param ret: A return variable that will be set to the
                  constructed list.
      

      :type ret: desc


   .. py:method:: to_string(ret)

      

      :param ret: 

      :type ret: desc


   .. py:method:: execute()

      Executes the test or section that this unit represents.
      This function handles printing the pass/failure state
      as well as executing subsections. However, if this unit
      has already been executed, this function does nothing.
      
      


   .. py:method:: exec_sections()

      Executes all subsections of this unit.
      If this unit has no subsections, this
      function does nothing.
      
      


   .. py:method:: print_pass_or_fail()

      Determines whether the unit passed or failed
      and prints it, obeying the section depth,
      print length, and whether colors are enabled.
      
      

   **Attributes**

   .. py:attribute:: test_id

      Stores the unique ID of the unit.
      This value is autogenerated and
      is used to name the function
      this unit is linked to.
      


   .. py:attribute:: friendly_name

      The "friendly name" of the execution unit.
      This is equivalent to the NAME parameter
      when calling ct_add_test() or ct_add_section().
      Dereferencing the value of this field
      will yield the ID of this unit while in the
      scope of the unit.
      


   .. py:attribute:: test_file

      The full path that points to the file containing
      this unit's declaration. This value is propagated
      down from the root test to all sections and subsections.
      


   .. py:attribute:: expect_fail

      A boolean describing whether this unit is intended
      to fail or not. Directly related to the parameter
      of the same name in ct_add_test() and ct_add_section().
      


   .. py:attribute:: parent

      A reference pointing to the parent execution unit
      of this unit. This will be empty for the root test
      and filled for all subsections.
      


   .. py:attribute:: children

      A map between IDs and references to unit instances
      used to represent the subsections of this unit.
      


   .. py:attribute:: print_length
      :value: "${CT_PRINT_LENGTH}"

      The length to use for printing in the context of this
      unit and any subsections that do not override it.
      This value can be set by the parameter of the same name
      in ct_add_test() and ct_add_section(). It can also be set
      via an overriding cache variable.
      


   .. py:attribute:: print_length_forced
      :value: FALSE

      Describes whether the print length was forced via the call
      to ct_add_test() or ct_add_section() that constructed
      this unit.
      


   .. py:attribute:: execute_sections
      :value: FALSE

      A boolean describing whether or not this unit
      should loop over and execute all of its subsections.
      


   .. py:attribute:: section_names_to_ids

      A map linking section friendly names to Ids so the
      id isn't lost between the first and second invocation passes.
      


   .. py:attribute:: exceptions

      A list containing messages representing any exceptions
      that occurred during the execution of this unit.
      


   .. py:attribute:: has_executed
      :value: FALSE

      Whether this unit has been executed already or not.
      Useful for determining whether to re-execute
      after a failed test is detected.
      


   .. py:attribute:: has_printed
      :value: FALSE

      Whether the pass/fail status of this unit has been
      printed yet. This ensures that parent units of
      a failed unit are not printed multiple times.
      


   .. py:attribute:: section_depth
      :value: 0

      Stores how many sections deep this execution unit is.
      This is used to determine how many tabs to place in front
      of the pass/fail print line.
      


